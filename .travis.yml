# Mostly based on Eric Niebler's range-v3 one:
# https://github.com/ericniebler/range-v3/blob/master/.travis.yml

language: cpp
script: cmake

matrix:
  global:
    - libclang_so = $(TRAVIS_BUILD_DIR)/build/libclang.so
  include:

  # Main matrix rows (Clang & GCC setup, release, shared libraries)
    - env: BUILD_TYPE=Release CLANG_VERSION=3.7 SIPLASPLAS_LIBRARIES_STATIC=FALSE
      os: linux
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - libclang1-3.7 # For DRLParser
            - g++-5 # We need an updated stdlibc++ for clang too
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: BUILD_TYPE=Release CLANG_VERSION=3.7 GCC_VERSION=5.2.1 GCC=gcc-5 GXX=g++-5 SIPLASPLAS_LIBRARIES_STATIC=FALSE
      os: linux
      addons: &gcc521
        apt:
          packages:
            - libclang1-3.7 # We need libclang for reflection parser
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

  # Debug, shared libraries
    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 SIPLASPLAS_LIBRARIES_STATIC=FALSE
      os: linux
      addons: *clang37

    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 GCC_VERSION=5.2.1 GCC=gcc-5 GXX=g++-5 SIPLASPLAS_LIBRARIES_STATIC=FALSE
      os: linux
      addons: *gcc521

  # Release, static libraries
    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 SIPLASPLAS_LIBRARIES_STATIC=TRUE
      os: linux
      addons: *clang37

    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 GCC_VERSION=5.2.1 GCC=gcc-5 GXX=g++-5 SIPLASPLAS_LIBRARIES_STATIC=TRUE
      os: linux
      addons: *gcc521

  # Debug, static libraries
    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 SIPLASPLAS_LIBRARIES_STATIC=TRUE
      os: linux
      addons: *clang37

    - env: BUILD_TYPE=Debug CLANG_VERSION=3.7 GCC_VERSION=5.2.1 GCC=gcc-5 GXX=g++-5 SIPLASPLAS_LIBRARIES_STATIC=TRUE
      os: linux
      addons: *gcc521

before_install:
  - git submodule update --init --recursive
  - if [ -n "$GCC_VERSION" ]; then export CXX="$GXX" CC="$GCC"; fi
  - if [ -n "$GCC_VERSION" ]; then mkdir gccaliases && export PATH=$(pwd)/gccaliases:${PATH}; fi
  - if [ -n "$GCC_VERSION" ]; then ln -s $(which $GCC) gccaliases/gcc-${GCC_VERSION} && ln -s $(which $GXX) gccaliases/g++-${GCC_VERSION}; fi
  - if [ -z "$GCC_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ -z "$GCC_VERSION" -a "$CLANG_VERSION" == "3.4" ]; then export CXX="/usr/local/clang-3.4/bin/clang++" CC="/usr/local/clang-3.4/bin/clang"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - $CC --version
  - if [ -z "$GCC_VERSION" ]; then which clang++ || true; fi

install:

# From Louis Dionne's Boost.Hana .travis.yml

############################################################################
# All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

############################################################################
# Install a recent CMake
############################################################################
  - CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}

  - cmake --version
  - cd ${TRAVIS_BUILD_DIR}

  # Build libclang:
  #- svn co --quiet http://llvm.org/svn/llvm-project/llvm/trunk llvm && cd llvm/tools/
  #- svn co --quiet http://llvm.org/svn/llvm-project/cfe/trunk clang
  #- cd .. && mkdir buildllvm-clang && cd buildllvm-clang
  #- cmake .. -DCMAKE_BUILD_TYPE=Release && cmake --build .
  - export LIBCLANG=$(dpkg -L libclang1-${CLANG_VERSION} | grep libclang.so)

  # Install reflection parser dependencies:
  - pip install --user -r src/reflection/parser/requirements.txt
  - pip install --user clang==${CLANG_VERSION}

  # Configure and build project:
  - if [ ! -d build ]; then mkdir build; fi
  - cd build
  - cmake .. -DSIPLASPLAS_VERBOSE_CONFIG=ON -DCMAKE_VERBOSE_MAKEFILE=OFF -DBII_BOOST_VERBOSE=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDRLPARSER_LIBCLANG="$LIBCLANG" -DSIPLASPLAS_LIBRARIES_STATIC="$SIPLASPLAS_LIBRARIES_STATIC"
  - cmake --build .

script:
  - make run-tests-all
  - make run-examples-all

before_deploy:
  - make package # TODO: Deploy to github

deploy:
  provider: releases
  api_key:
    secure: h4uu0/jycFKap6E0EL9VyGLm2xHW4m3m9GCviG27X3NvGaYSWVYRHNWN7cn7dQkxH1F27oBqGC5XUCHfydL5BEBwIwxB/ZQfcStOkBoUmPE7V0pADQY7DLORr5+UkzjxpNTZBZspYkkpdTOBIgjwdndXvUxYMoxaXKmUTKDNdN0zysbD4021rq8wWpSB4vnsmDvNiPO+SJ/9Tfzbaq3FnH0sYEyCiRgv9n19VSn3YD6XGTJMXkFQPlJxVQ99BnOCSMaIT5pQXAZUYZs1aBibBijgsE9EEk+Xz8guuHN4Efv2WjVU0Twmxae2RqYlzYluyTrBbLgfBF6OuD1PQ3Nm8pUMafPVV/OTrRbYPCjnywvU87HAOWokulFiegOKeQIbOoJRGw118BvXBVjHPjqYY4+QZ+TdlT1/OCVLI5jmlpOZOTS5V+JdiSjvfJi5H/UzEqkHn1fl5gH60lVhFUqiPipACJKbVFSaHFj7CGZ70Nz5QVx3G+63HVDF8If9+qgahW+UOGDKoYqWqx+27BBiWlJqJUupbObJKwU6KRFA/4h+oWP/+PTINcrOOVbppKijGz3hi8S9gjwn+iT1DZwQZ2338a96x9seTNoDQgciqOKM7bG05oIvYjkQmec0oLX32cuet2g6klPuQHhFElz1nKAlw/e2rHXHVlRWlX6tt8A=
  file: siplasplas-*
  file_glob: true
  skip-cleanup: true
  on:
    repo: GueimUCM/siplasplas
    tag: true
